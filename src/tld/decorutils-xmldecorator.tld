<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE taglib PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"
  "http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">
<taglib>
  <tlib-version>0.6</tlib-version>
  <jsp-version>1.2</jsp-version>
  <short-name>xdeco</short-name>
  <uri>http://www.devyant.org</uri>
  <display-name>Decorator Utils: XML Tag Library</display-name>
  <description>
    This Tag Library is meant to transform simple information stored on
    a XML document. There is no decorator involved for this is only meant
    to provide simple iteration through a document's child nodes. You may
    select the attibutes you wish to manipulate and use them for whatever
    purpose you want within the body of this tag.
  </description>

  <!-- Xdecorate -->
  <tag>
    <name>xdecorate</name>
    <tag-class>org.devyant.decorutils.tags.xmldecorator.XDecorateTag</tag-class>
    <tei-class>org.devyant.decorutils.tags.xmldecorator.XDecorateTagExtraInfo</tei-class>
    <body-content>JSP</body-content>
    <display-name>Xdecorate</display-name>
    <description>
      This tag is meant to transform simple information stored on a XML
      document. There is no decorator involved for this is only meant to
      provide simple iteration through a document's child nodes. You may
      select the attibutes you wish to manipulate and use them for
      whatever purpose you want within the body of this tag.
    </description>

    <!-- attributes -->
    <attribute>
      <name>attributes</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
      <description>
        The attributes you wish to manipulate. They will be stored in
        the scope with the same name.
      </description>
    </attribute>
    <attribute>
      <name>document</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
      <description>XML document you wish to decorate.</description>
    </attribute>
    <attribute>
      <name>xpath</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
      <description>Xpath for the nodes to be selected</description>
    </attribute>
  </tag>

  <!-- Xnested -->
  <tag>
    <name>xnested</name>
    <tag-class>org.devyant.decorutils.tags.xmldecorator.XNestedTag</tag-class>
    <tei-class>org.devyant.decorutils.tags.xmldecorator.XNestedTagExtraInfo</tei-class>
    <body-content>JSP</body-content>
    <display-name>Xdecorate</display-name>
    <description>
      Each XNestedTag nested tag refers to the corresponding
      nested nodes.
    </description>

    <!-- attributes -->
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
      <description>
        This id can be used to avoid a clash between the attributes
        names in the scope. The attributes will be set as [id]_[attribute].
      </description>
    </attribute>
    <attribute>
      <name>attributes</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
      <description>
        The attributes you wish to manipulate. They will be stored in
        the scope with the same name.
      </description>
    </attribute>
  </tag>

  <!-- Xrule -->
  <tag>
    <name>xrule</name>
    <tag-class>org.devyant.decorutils.tags.xmldecorator.XRuleTag</tag-class>
    <body-content>JSP</body-content>
    <display-name>Xrule</display-name>
    <description>
      This tag enables you to specify rules for the evaluation
      or not of it's body.
    </description>

    <!-- attribute -->
    <attribute>
      <name>rules</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
      <description>
        These rules should be separated by semi-colons (';')
        which will equivelent to an OR operation. These rules should be
        written in the form: [attribute]=[value] or [attribute]!=[value].
      </description>
    </attribute>
  </tag>

  <!-- Xattribute -->
  <tag>
    <name>xattribute</name>
    <tag-class>org.devyant.decorutils.tags.xmldecorator.XAttributeTag</tag-class>
    <body-content>JSP</body-content>
    <display-name>Xattribute</display-name>
    <description>Outputs the value of an attribute from the parent "X-Tag".</description>

    <!-- attribute -->
    <attribute>
      <name>attribute</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
      <description>The name of the attribute to fetch.</description>
    </attribute>
  </tag>
</taglib>